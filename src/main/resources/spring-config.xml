<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.cgz.capa"/>

    <bean id="SystemPermissionsInfoService" class="com.cgz.capa.logic.services.SystemPermissionsInfoService">
        <constructor-arg
                value="${permissionsInfo.manifestUri}"/>
    </bean>

    <bean id="ApplicationDescriptionParserService"
          class="com.cgz.capa.logic.services.ApplicationDescriptionParserService">
        <constructor-arg
                value="${applicationDescription.googlePlayUri}"/>
    </bean>

    <bean id="RiskScoreFactory" class="com.cgz.capa.logic.services.RiskScoreFactory">
        <constructor-arg index="0" value="${riskScore.names}"/>
        <constructor-arg index="1" value="${riskScore.points}"/>
    </bean>

    <bean id="AlgorithmExecutor" class="com.cgz.capa.logic.scoring.impl.BasicAlgorithmExecutor" autowire="constructor"/>

    <bean id="BasicResultAnalyser" class="com.cgz.capa.logic.scoring.impl.BasicResultAnalyser"/>

    <bean id="WeightedResultAnalyser" class="com.cgz.capa.logic.scoring.impl.WeightedResultAnalyser">
        <property name="weights">
            <map>
                <entry key-ref="ScoreAppPermissionsStep" value="${WeightedResultAnalyser.weight.scoreAppPermissions}"/>
                <entry key-ref="ContrastWithMarketVersionStep" value="${WeightedResultAnalyser.weight.contrastWithMarket}"/>
                <entry key-ref="ContrastWithSimilarAppsStep" value="${WeightedResultAnalyser.weight.contrastWithSimilarAppsStep}"/>
                <!--<entry key-ref="ScorePopularMalwarePermissionsStep" value="${WeightedResultAnalyser.weight.ScorePopularMalwarePermissionsStep}"/>-->
                <!--<entry key-ref="ContrastWithSimilarAppsPopularMalwarePermissionsStep" value="${WeightedResultAnalyser.weight.ContrastWithSimilarAppsPopularMalwarePermissionsStep}"/>-->
            </map>
        </property>
    </bean>



    <bean id="ScoreAppPermissionsStep" class="com.cgz.capa.logic.scoring.impl.steps.ScoreAppPermissionsStep">
        <constructor-arg index="0">
            <map>
                <entry key="costsMoney" value="${scoreAppPermissions.permission.flag.costs.money}"/>
                <entry key="normal" value="${scoreAppPermissions.permission.protectionLevel.normal}"/>
                <entry key="dangerous" value="${scoreAppPermissions.permission.protectionLevel.dangerous}"/>
                <entry key="signature" value="${scoreAppPermissions.permission.protectionLevel.signature}"/>
                <entry key="signature|System"
                       value="${scoreAppPermissions.permission.protectionLevel.signatureOrSystem}"/>
                <entry key="personalInfo" value="${scoreAppPermissionsStep.permissionGroup.flag.personalInfo}"/>
            </map>
        </constructor-arg>
    </bean>


    <bean id="ContrastWithMarketVersionStep"
          class="com.cgz.capa.logic.scoring.impl.steps.ContrastWithMarketVersionStep">
        <constructor-arg index="0">
            <map>
                <entry key="costsMoney" value="${contrastWithMarket.newPermission.flag.costs.money}"/>
                <entry key="normal" value="${contrastWithMarket.newPermission.protectionLevel.normal}"/>
                <entry key="dangerous" value="${contrastWithMarket.newPermission.protectionLevel.dangerous}"/>
                <entry key="signature" value="${contrastWithMarket.newPermission.protectionLevel.signature}"/>
                <entry key="signature|System"
                       value="${contrastWithMarket.newPermission.protectionLevel.signatureOrSystem}"/>
                <entry key="personalInfo"
                       value="${contrastWithMarket.newPermission.permissionGroup.flag.personalInfo}"/>
            </map>
        </constructor-arg>
        <constructor-arg index="1" value="${contrastWithMarket.appNotFoundInMarket}"/>
    </bean>


    <bean id="ContrastWithSimilarAppsStep" class="com.cgz.capa.logic.scoring.impl.steps.ContrastWithSimilarAppsStep">
        <constructor-arg index="0">
            <map>
                <entry key="costsMoney"
                       value="${contrastWithSimilarAppsStep.uniquePermissionInSimilarApps.flag.costs.money}"/>
                <entry key="normal"
                       value="${contrastWithSimilarAppsStep.uniquePermissionInSimilarApps.protectionLevel.normal}"/>
                <entry key="dangerous"
                       value="${contrastWithSimilarAppsStep.uniquePermissionInSimilarApps.protectionLevel.dangerous}"/>
                <entry key="signature"
                       value="${contrastWithSimilarAppsStep.uniquePermissionInSimilarApps.protectionLevel.signature}"/>
                <entry key="signature|System"
                       value="${contrastWithSimilarAppsStep.uniquePermissionInSimilarApps.protectionLevel.signatureOrSystem}"/>
                <entry key="personalInfo"
                       value="${contrastWithSimilarAppsStep.uniquePermissionInSimilarApps.permissionGroup.flag.personalInfo}"/>
            </map>
        </constructor-arg>

        <constructor-arg index="1" value="${contrastWithSimilarAppsStep.rarePermissionBracket}"/>
        <constructor-arg index="2" value="${contrastWithSimilarAppsStep.uniquePermissionBracket}"/>
        <constructor-arg index="3" value="${contrastWithSimilarAppsStep.uniquePermissionPenaltyRatio}"/>
    </bean>


    <bean id="ContrastWithSimilarAppsPopularMalwarePermissionsStep" class="com.cgz.capa.logic.scoring.impl.steps.ContrastWithSimilarAppsPopularMalwarePermissionsStep">
        <constructor-arg index="0" value="${contrastWithSimilarAppsStep.rarePermissionBracket}"/>
        <constructor-arg index="1" value="${contrastWithSimilarAppsStep.uniquePermissionBracket}"/>
        <constructor-arg index="2" value="${contrastWithSimilarAppsStep.uniquePermissionPenaltyRatio}"/>
        <constructor-arg index="3">
            <bean class="com.cgz.capa.logic.scoring.impl.steps.ScorePopularMalwarePermissionsDelegate">
                <constructor-arg value="ContrastWithSimilarAppsPopularMalwarePermissionsStep.riskyPermission."/>
                <constructor-arg ref="applicationPropertiesService"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="ScorePopularMalwarePermissionsStep" class="com.cgz.capa.logic.scoring.impl.steps.ScorePopularMalwarePermissionsStep">
        <constructor-arg>
            <bean class="com.cgz.capa.logic.scoring.impl.steps.ScorePopularMalwarePermissionsDelegate">
                <constructor-arg value="ScorePopularMalwarePermissionsStep.riskyPermission."/>
                <constructor-arg ref="applicationPropertiesService"/>
            </bean>
        </constructor-arg>
    </bean>



    <bean id="ApplicationPropertiesResource" class="org.springframework.core.io.ClassPathResource">
        <constructor-arg value="application.properties"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" name="application.properties">
        <property name="locations">
            <list>
                <!--<value>classpath*:application.properties</value>-->
                <!--<value>   <ref bean="ApplicationPopertyiesFile"/></value>-->
                <ref bean="ApplicationPropertiesResource"/>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="false"/>
    </bean>


    <util:list id="algorithmSteps" list-class="java.util.ArrayList"
               value-type="com.cgz.capa.logic.scoring.interfaces.AlgorithmStep">
    </util:list>


</beans>